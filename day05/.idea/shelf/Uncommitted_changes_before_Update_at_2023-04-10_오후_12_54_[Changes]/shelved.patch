Index: ../day04/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0c8f4123-3ed8-4fb0-bc3b-a60a7e335ffc\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/jarRepositories.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/config/AppCtx.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/main/Ex01.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/models/member/Member.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/models/member/MemberDao.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/META-INF/maven/archetype.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/archetype-resources/pom.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/archetype-resources/src/main/java/App.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/archetype-resources/src/test/java/AppTest.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/logback.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/.idea/misc.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/.idea/workspace.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/pom.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/src/main/resources/META-INF/maven/archetype.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/src/main/resources/archetype-resources/pom.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/src/main/resources/archetype-resources/src/main/java/App.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/../day04_2/src/main/resources/archetype-resources/src/test/java/AppTest.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../day03/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../day03/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"importingSettings\">\n      <MavenImportingSettings>\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\n      </MavenImportingSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2O4jkPTtKePzXJT3yKcqZBAzT3J\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.poratu.idea.plugins.tomcat.setting.TomcatServersConfigurable&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Ex01\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.Ex01\" />\n      <module name=\"day04\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"main.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Ex01\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0c8f4123-3ed8-4fb0-bc3b-a60a7e335ffc\" name=\"Changes\" comment=\"\" />\n      <created>1680826890628</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1680826890628</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../day04/.idea/workspace.xml b/../day04/.idea/workspace.xml
--- a/../day04/.idea/workspace.xml	
+++ b/../day04/.idea/workspace.xml	
@@ -4,31 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0c8f4123-3ed8-4fb0-bc3b-a60a7e335ffc" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/config/AppCtx.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/main/Ex01.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/models/member/Member.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/models/member/MemberDao.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/META-INF/maven/archetype.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/archetype-resources/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/archetype-resources/src/main/java/App.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/archetype-resources/src/test/java/AppTest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/logback.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/src/main/resources/META-INF/maven/archetype.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/src/main/resources/archetype-resources/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/src/main/resources/archetype-resources/src/main/java/App.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../day04_2/src/main/resources/archetype-resources/src/test/java/AppTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../day03/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../day03/.idea/workspace.xml" afterDir="false" />
+    <list default="true" id="0c8f4123-3ed8-4fb0-bc3b-a60a7e335ffc" name="Changes" comment="빼놓은 메모 추가">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -97,6 +74,18 @@
       <option name="presentableId" value="Default" />
       <updated>1680826890628</updated>
     </task>
+    <task id="LOCAL-00001" summary="빼놓은 메모 추가">
+      <created>1680840231543</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1680840231543</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="빼놓은 메모 추가" />
+    <option name="LAST_COMMIT_MESSAGE" value="빼놓은 메모 추가" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/workspace.xml	
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="7d9f71bc-b562-4db6-85c5-d67cd9d46b34" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/config/ControllerConfig.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/config/MvcConfig.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/HelloController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/members/InfoController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/members/Join.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/controllers/members/JoinController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/models/member/Member.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/META-INF/maven/archetype.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/archetype-resources/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/archetype-resources/src/main/java/App.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/resources/archetype-resources/src/test/java/AppTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/hello.jsp" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/member/info.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/member/join.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/webapp/WEB-INF/view/member/join.jsp" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/webapp/WEB-INF/web.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../day04/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../day04/.idea/workspace.xml" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="package-info" />
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="LogFilters">
+    <option name="FILTER_ERRORS" value="false" />
+    <option name="FILTER_WARNINGS" value="false" />
+    <option name="FILTER_INFO" value="true" />
+    <option name="FILTER_DEBUG" value="true" />
+    <option name="CUSTOM_FILTER" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="importingSettings">
+      <MavenImportingSettings>
+        <option name="workspaceImportEnabled" value="true" />
+      </MavenImportingSettings>
+    </option>
+  </component>
+  <component name="ProjectId" id="2ODBdyEB9iowdovvvUqMojDiDy7" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;com.poratu.idea.plugins.tomcat.setting.TomcatServersConfigurable&quot;
+  }
+}</component>
+  <component name="RunManager">
+    <configuration name="tomcat9" type="com.poratu.idea.plugins.tomcat">
+      <predefined_log_file enabled="true" id="Tomcat Localhost Log" />
+      <predefined_log_file enabled="true" id="Tomcat Access Log" />
+      <predefined_log_file id="Tomcat Catalina Log" />
+      <predefined_log_file id="Tomcat Manager Log" />
+      <predefined_log_file id="Tomcat Host Manager Log" />
+      <option name="contextPath" value="/study" />
+      <option name="docBase" value="$PROJECT_DIR$/src/main/webapp" />
+      <option name="envOptions">
+        <map />
+      </option>
+      <option name="extraClassPath" value="" />
+      <option name="port" value="3000" />
+      <option name="tomcatInfo">
+        <TomcatInfo>
+          <option name="name" value="Apache Tomcat/9.0.73" />
+          <option name="path" value="$PROJECT_DIR$/../../../apache-tomcat-9.0.73" />
+          <option name="version" value="9.0.73.0" />
+        </TomcatInfo>
+      </option>
+      <option name="vmOptions" value="" />
+      <module name="study" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="7d9f71bc-b562-4db6-85c5-d67cd9d46b34" name="Changes" comment="" />
+      <created>1681085363071</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1681085363071</updated>
+    </task>
+    <servers />
+  </component>
+</project>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	
+++ b/pom.xml	
@@ -0,0 +1,69 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>org.example</groupId>
+  <artifactId>study</artifactId>
+  <version>1.0-SNAPSHOT</version>
+  <name>Archetype - study</name>
+  <url>http://maven.apache.org</url>
+
+  <properties>
+      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+      <maven.compiler.source>19</maven.compiler.source>
+      <maven.compiler.target>19</maven.compiler.target>
+  </properties>
+
+  <dependencies>
+
+      <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
+      <dependency>
+          <groupId>org.springframework</groupId>
+          <artifactId>spring-webmvc</artifactId>
+          <version>5.3.26</version>
+      </dependency>
+
+      <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
+      <dependency>
+          <groupId>javax.servlet</groupId>
+          <artifactId>javax.servlet-api</artifactId>
+          <version>4.0.1</version>
+          <scope>provided</scope>
+      </dependency>
+
+      <!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api -->
+      <dependency>
+          <groupId>javax.servlet.jsp</groupId>
+          <artifactId>javax.servlet.jsp-api</artifactId>
+          <version>2.3.3</version>
+          <scope>provided</scope>
+      </dependency>
+
+      <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
+      <dependency>
+          <groupId>org.projectlombok</groupId>
+          <artifactId>lombok</artifactId>
+          <version>1.18.26</version>
+          <scope>provided</scope>
+      </dependency>
+
+      <!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5 -->
+      <dependency>
+          <groupId>org.thymeleaf</groupId>
+          <artifactId>thymeleaf-spring5</artifactId>
+          <version>3.1.1.RELEASE</version>
+      </dependency>
+
+      <!-- https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-java8time -->
+      <dependency>
+          <groupId>org.thymeleaf.extras</groupId>
+          <artifactId>thymeleaf-extras-java8time</artifactId>
+          <version>3.0.4.RELEASE</version>
+      </dependency>
+
+
+
+  </dependencies>
+
+
+
+</project>
Index: src/main/resources/archetype-resources/src/test/java/AppTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/archetype-resources/src/test/java/AppTest.java b/src/main/resources/archetype-resources/src/test/java/AppTest.java
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/archetype-resources/src/test/java/AppTest.java	
@@ -0,0 +1,38 @@
+package $org.example;
+
+import junit.framework.Test;
+import junit.framework.TestCase;
+import junit.framework.TestSuite;
+
+/**
+ * Unit test for simple App.
+ */
+public class AppTest 
+    extends TestCase
+{
+    /**
+     * Create the test case
+     *
+     * @param testName name of the test case
+     */
+    public AppTest( String testName )
+    {
+        super( testName );
+    }
+
+    /**
+     * @return the suite of tests being tested
+     */
+    public static Test suite()
+    {
+        return new TestSuite( AppTest.class );
+    }
+
+    /**
+     * Rigourous Test :-)
+     */
+    public void testApp()
+    {
+        assertTrue( true );
+    }
+}
Index: src/main/resources/archetype-resources/src/main/java/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/archetype-resources/src/main/java/App.java b/src/main/resources/archetype-resources/src/main/java/App.java
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/archetype-resources/src/main/java/App.java	
@@ -0,0 +1,13 @@
+package $org.example;
+
+/**
+ * Hello world!
+ *
+ */
+public class App 
+{
+    public static void main( String[] args )
+    {
+        System.out.println( "Hello World!" );
+    }
+}
Index: src/main/resources/META-INF/maven/archetype.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/META-INF/maven/archetype.xml b/src/main/resources/META-INF/maven/archetype.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/META-INF/maven/archetype.xml	
@@ -0,0 +1,9 @@
+<archetype>
+  <id>study</id>
+  <sources>
+    <source>src/main/java/App.java</source>
+  </sources>
+  <testSources>
+    <source>src/test/java/AppTest.java</source>
+  </testSources>
+</archetype>
Index: src/main/resources/archetype-resources/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/archetype-resources/pom.xml b/src/main/resources/archetype-resources/pom.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/archetype-resources/pom.xml	
@@ -0,0 +1,15 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>$org.example</groupId>
+  <artifactId>$study</artifactId>
+  <version>$1.0-SNAPSHOT</version>
+  <dependencies>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>3.8.1</version>
+      <scope>test</scope>
+    </dependency>
+  </dependencies>
+</project>
Index: src/main/webapp/WEB-INF/view/hello.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/view/hello.jsp b/src/main/webapp/WEB-INF/view/hello.jsp
new file mode 100644
--- /dev/null	
+++ b/src/main/webapp/WEB-INF/view/hello.jsp	
@@ -0,0 +1,2 @@
+<%@ page contentType="text/html; charset=utf-8" %>
+${name}님 , ${message}
Index: src/main/java/controllers/members/Join.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/members/Join.java b/src/main/java/controllers/members/Join.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/controllers/members/Join.java	
@@ -0,0 +1,15 @@
+package controllers.members;
+
+import lombok.Data;
+
+@Data
+public class Join {
+    private String userId;
+    private String userPw;
+    private String userPwRe;
+
+    private String userNm;
+
+    private boolean agree;
+
+}
Index: src/main/java/controllers/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/HelloController.java b/src/main/java/controllers/HelloController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/controllers/HelloController.java	
@@ -0,0 +1,42 @@
+package controllers;
+
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.servlet.ModelAndView;
+
+@Controller
+public class HelloController {
+
+
+//    /*Get 방식의 매핑*/
+//    @GetMapping("/hello")
+//    //@RequestParam은 하나씩 달아야 한다.
+//    //required = false는 필수값 설정에서 제외를 시켜준다.
+//    public String hello(@RequestParam(name="name", required = false) String nm, boolean agree, Model model){
+//        //매개변수와 파라미터를 매칭시켜 준다. 현재 상태는 nm만 매칭 가능
+//        //요청 key값과 변수가 일치하지 않는 경우 출력 안됨. @RequestParam으로 해결한다.
+//        //@RequestParam은 변수와 key값을 일치시켜 준다.
+//        //그래서, name으로 무언가 요청이 들어왔을때 nm으로 넘겨주고, 출력을 할때는
+//        //name으로 처리하게 된다.
+//        System.out.printf("name=%s, agree=%s%n", nm, agree);
+//        model.addAttribute("message", "안녕하세요!");
+//        return "hello"; //String, ModelAndView
+//    }
+
+    //통일성 있게 ModelAndView로 반환하는 형식
+    @GetMapping("/hello")
+    public ModelAndView hello(String name, String agree){
+        ModelAndView mv = new ModelAndView();
+        //setAttribute, getAttribute
+        mv.addObject("message", "안녕하세요!");
+        mv.addObject("name", name);
+
+        mv.setViewName("hello");
+        return mv;
+    }
+
+
+
+}
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/web.xml b/src/main/webapp/WEB-INF/web.xml
new file mode 100644
--- /dev/null	
+++ b/src/main/webapp/WEB-INF/web.xml	
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<web-app version="4.0" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
+         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd">
+    <!--스프링은 모든 요청을 dispatcher에서 받는다.-->
+    <servlet>
+        <servlet-name>dispatcher</servlet-name>
+        <servlet-class>
+            org.springframework.web.servlet.DispatcherServlet
+        </servlet-class>
+        <init-param>
+            <param-name>contextClass</param-name>
+            <param-value>
+                org.springframework.web.context.support.AnnotationConfigWebApplicationContext
+            </param-value>
+        </init-param>
+        <init-param>
+            <param-name>contextConfigLocation</param-name>
+            <param-value>
+                config.MvcConfig
+                config.ControllerConfig
+            </param-value>
+        </init-param>
+        <load-on-startup>1</load-on-startup>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>dispatcher</servlet-name>
+        <url-pattern>/</url-pattern>
+    </servlet-mapping>
+    <filter>
+        <filter-name>encodingFilter</filter-name>
+        <filter-class>
+            org.springframework.web.filter.CharacterEncodingFilter
+        </filter-class>
+        <init-param>
+            <param-name>encoding</param-name>
+            <param-value>UTF-8</param-value>
+        </init-param>
+    </filter>
+    <filter-mapping>
+        <filter-name>encodingFilter</filter-name>
+        <url-pattern>/*</url-pattern>
+    </filter-mapping>
+
+</web-app>
\ No newline at end of file
Index: src/main/java/config/ControllerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/config/ControllerConfig.java b/src/main/java/config/ControllerConfig.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/config/ControllerConfig.java	
@@ -0,0 +1,18 @@
+package config;
+
+import controllers.HelloController;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+
+@Configuration
+@ComponentScan("controllers") //컨트롤러스 하위 모든 클래스가 스캔범위
+public class ControllerConfig {
+    @Bean
+    public HelloController helloController(){
+        return new HelloController();
+    }
+
+
+
+}
Index: src/main/java/models/member/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/models/member/Member.java b/src/main/java/models/member/Member.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/models/member/Member.java	
@@ -0,0 +1,15 @@
+package models.member;
+
+import lombok.Data;
+
+import java.time.LocalDateTime;
+
+@Data
+public class Member { //DTO
+
+    private String userId;
+    private String userNm;
+    private String mobile;
+    private LocalDateTime regDt;
+
+}
Index: src/main/java/config/MvcConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/config/MvcConfig.java b/src/main/java/config/MvcConfig.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/config/MvcConfig.java	
@@ -0,0 +1,79 @@
+package config;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer;
+import org.springframework.web.servlet.config.annotation.EnableWebMvc;
+import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+import org.thymeleaf.extras.java8time.dialect.Java8TimeDialect;
+import org.thymeleaf.spring5.SpringTemplateEngine;
+import org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver;
+import org.thymeleaf.spring5.view.ThymeleafViewResolver;
+
+@Configuration
+@EnableWebMvc //WebMvc 기본 세팅을 해주는 애노테이션
+public class MvcConfig implements WebMvcConfigurer {
+
+    /* 웹 컨테이너 생성, 의존성 주입 */
+    @Autowired
+    private ApplicationContext applicationContext;
+
+    /*CSS, image같은 정적 자원 설정 관련*/
+    @Override
+    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {
+        //WebMvcConfigurer.super.configureDefaultServletHandling(configurer);
+        configurer.enable();
+    }
+    /*이 밑의 4개의 메서드는 타임리프의 초기 설정 메서드이다.*/
+    @Bean
+    public SpringResourceTemplateResolver templateResolver() {
+        SpringResourceTemplateResolver templateResolver = new SpringResourceTemplateResolver();
+        templateResolver.setApplicationContext(applicationContext);
+        //경로 설정
+        templateResolver.setPrefix("/WEB-INF/view/");
+        templateResolver.setSuffix(".html");
+        //코드 번역을 할 때 캐시를 이용할 것인지 아닌지를 결정한다.
+        //false일 경우, 캐시를 사용하지 않고 서버에서 계속 데이터를 받아온다.
+        //true 일 경유, 캐시를 사용해서 데이터를 한번만 주고 재활용하게 된다.
+        //개발 할땐 변경사항을 보기 위하여 false, 배포 할 땐 true를 해주는것이 좋다.
+        templateResolver.setCacheable(false);
+        return templateResolver;
+    }
+
+    @Bean
+    public SpringTemplateEngine templateEngine() {
+        SpringTemplateEngine templateEngine = new SpringTemplateEngine();
+        templateEngine.setTemplateResolver(templateResolver());
+        //EL 식을 사용할 것인가?
+        templateEngine.setEnableSpringELCompiler(true);
+
+        //확장 모듈을 사용할 때 필요한 부분, 현재 Java8Time 사용중이므로 추가
+        //만약 확장 기능이 더 있다면, 더 추가해야 한다. 많이 사용한다.
+        templateEngine.addDialect(new Java8TimeDialect());
+        //templateEngine.addDialect(new LayoutDialect());
+        return templateEngine;
+    }
+
+    @Bean
+    public ThymeleafViewResolver thymeleafViewResolver() {
+        ThymeleafViewResolver resolver = new ThymeleafViewResolver();
+        //<%@ page contentType...>을 대신 넣어주는 부분
+        resolver.setContentType("text/html");
+        resolver.setCharacterEncoding("utf-8");
+        resolver.setTemplateEngine(templateEngine());
+        return resolver;
+    }
+
+    @Override
+    public void configureViewResolvers(ViewResolverRegistry registry) {
+        registry.viewResolver(thymeleafViewResolver());
+    }
+
+
+
+
+
+}
Index: src/main/java/controllers/members/JoinController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/members/JoinController.java b/src/main/java/controllers/members/JoinController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/controllers/members/JoinController.java	
@@ -0,0 +1,30 @@
+package controllers.members;
+
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+
+@Controller
+@RequestMapping("/member/join") //모든 요청(get, post)에 대해 경로 지정 추가
+public class JoinController {
+
+    @GetMapping//Get방식의 데이터 받을시 실행, /member/join
+    public String join(Model model){
+        model.addAttribute("title", "회원가입");
+        model.addAttribute("content", "회원가입 내용!");
+        return "member/join";
+    }
+
+    @PostMapping //POST방식의 데이터 받을시 실행 /member/join
+    public String joinPs(Join join, Model model){ //join 객체로 보낸다.
+        // Spring에서 적절한 처리과정을 거침
+        //Getter, Setter가 필요없이 Join에 선언한 모든 데이터를 받아온다!
+        //model.addAttribute("join", join);//스프링에서 처리하기 때문에 필요없음
+
+        System.out.println(join);
+        return "redirect:/member/login";
+    }
+
+}
Index: src/main/java/controllers/members/InfoController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controllers/members/InfoController.java b/src/main/java/controllers/members/InfoController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/controllers/members/InfoController.java	
@@ -0,0 +1,27 @@
+package controllers.members;
+
+import models.member.Member;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+
+import java.time.LocalDateTime;
+
+@Controller
+public class InfoController {
+
+    @GetMapping("/member/info")
+    public String info(Model model){
+
+        Member member = new Member();
+        member.setUserId("user01");
+        member.setUserNm("사용자01");
+        member.setMobile("010-0000-0000");
+        member.setRegDt(LocalDateTime.now());
+
+        model.addAttribute("member", member);
+
+        return "member/info";
+    }
+
+}
Index: src/main/webapp/WEB-INF/view/member/join.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/view/member/join.jsp b/src/main/webapp/WEB-INF/view/member/join.jsp
new file mode 100644
--- /dev/null	
+++ b/src/main/webapp/WEB-INF/view/member/join.jsp	
@@ -0,0 +1,37 @@
+<%@ page contentType="text/html; charset=utf-8" %>
+<!--타임리프 설정을 완료한 순간부터, jsp 파일을 쓰지 않게 된다.-->
+<form method="post">
+    <dl>
+        <dt>아이디</dt>
+        <dd>
+            <!--  El식 변수로 값을 지정할 경우, spring에서 인식  -->
+            <input type="text" name="userId" value="${join.userId}">
+        </dd>
+    </dl>
+    <dl>
+        <dt>비밀번호</dt>
+         <dd>
+        <input type="password" name="userPw">
+         </dd>
+    </dl>
+    <dl>
+         <dt>비밀번호 확인</dt>
+          <dd>
+          <input type="password" name="userPwRe">
+           </dd>
+    </dl>
+
+    <dl>
+        <dt>회원명</dt>
+         <dd>
+        <input type="text" name="userNm">
+         <dd>
+   </dl>
+   <div>
+        <input type="checkbox" name="agree" value="true" id="agree">
+        <label for="agree">회원 가입 약관에 동의합니다.</label>
+   </div>
+
+   <button type="submit">가입하기</button>
+
+</form>
Index: src/main/webapp/WEB-INF/view/member/info.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/view/member/info.html b/src/main/webapp/WEB-INF/view/member/info.html
new file mode 100644
--- /dev/null	
+++ b/src/main/webapp/WEB-INF/view/member/info.html	
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+    <body>
+        <dl>
+            <dt>아이디</dt>
+            <dd th:text="${member.userId}"></dd>
+        </dl>
+        <dl>
+            <dt>회원명</dt>
+            <dd th:text="${member.userNm}"></dd>
+        </dl>
+        <dl>
+            <dt>휴대전화</dt>
+            <dd th:text="${member.mobile}"></dd>
+        </dl>
+        <dl>
+            <dt>가입일시</dt>
+            <dd th:text="${member.regDt}"></dd>
+        </dl>
+    </body>
+</html>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/view/member/join.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/view/member/join.html b/src/main/webapp/WEB-INF/view/member/join.html
new file mode 100644
--- /dev/null	
+++ b/src/main/webapp/WEB-INF/view/member/join.html	
@@ -0,0 +1,13 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.thymeleaf.org">
+
+    <!-- 반드시 th가 앞에 있어야 번역됨-->
+    <!-- th에 EL식이 붙으면, 그 내용을 EL식의 내용으로 대체한다.-->
+    <head>
+        <title th:text="${title}">제목!!</title>
+    </head>
+    <body>
+        <h1 th:text="${title}">제목!!</h1>
+        <h2 th:text="${context}">내용!!</h2>
+    </body>
+</html>
