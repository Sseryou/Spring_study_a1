타임리프(Thymeleaf)
1. 스프링 MVC와 타임리프 연동 설정
thymeleaf spring5   -> Thymeleaf Spring5 » 3.1.1.RELEASE

thymeleaf java8time   -> Thymeleaf Extras Java8time
					- #temporals 식 객체

2. 타임리프 소개
- 자연스러운 템플릿 지향 언어(Natural Template)


타임리프 기본문법
1. 타임리프의 주요 식(expression)

1) 변수식 : ${속성명}, ${연산식}
	속성을 추가가 어려운 경우 : [[식]]
			예) [[${속성명}]]
				[[*{속성명}]]
2) 메세지식 : #{메세지 코드}
3) URL식 : @{URL ...} : -> 컨텍스트 경로가 자동 추가 + 추가 기능
			예) /study : 컨텍스트 경로
				@{/member/join} -> /study/member/join
				
	쿼리스트링 추가 기능 (키=값, 키=값)
		(querystring)
	
				
4) 선택 변수식 : *{....} , th:object

th:block : 출력되는 태그 없이 변수값을 저장, 제어구문 ...

2. 타임리프 식 객체
3. th:text : 텍스트만 출력
, th:utext : HTML 태그 해석 출력

4. 
	- th:if, th:unless
			${조건 ...} : 조건이 참일때 출력, 거짓일때 미출력
	- th:each : 반복문
			- 배열
			- 컬렉션 (Collection - List, Set)
			- Iterator
			
			- status
				.index : 0부터 시작하는 순서 번호
				.count : 1부터 시작하는 순서 번호
				.even : 짝수 여부
				.odd : 홀수 여부
				.first : 첫번째 반복인지
				.last : 마지막 반복
				
				
			
	<c:forEach var="item" items="${items}" varStatus="status">
	
	</c:forEach>
	
5. th:href, th:src ...
	th:classappend

6. th:object


타임리프 내장 식 객체

${#객체명 ....}
*{#객체명 ....}

#temporals : java.time 패키지

- 스프링 빈으로 되어 있으면 바로 템플릿 내에서 접근 가능
${@빈이름.메서드명(...)}
*{....}

타임리프 페이지 레이아웃

thymeleaf layout

Thymeleaf Layout Dialect 최신버전 모듈 사용
3.2.1버전





스프링 MVC 폼과 에러 메세지 연동
th:field -> 커맨드 객체의 값
		-> 태그에 맞게 value, checked, selected ...


th:replace
th:fragment



WebMvcConfigurer
- addViewControllers : 아주 간단한 페이지를 만들때 사용
(컨트롤러가 필요 없을때 사용. 
컨트롤러 없이 모델과 뷰를 연결시킨다.)

- addResourceHandlers
	- 정적 자원 경로
	스타일시트, 자바스크립트, 이미지 같이 정적인 자원 관련
	
	정적 자원들은 컨트롤러를 거치면 안된다.
	정적인 채로 냅두고, 필요할때만 호출해야 할 것...
	

배열, 컬렉션 -> 속성 -> th:each


