글을 작성하는데 필요한 기능 명세
1. 글 작성 기능
2. 글 목록 보기 기능
3. 글 상세 보기 기능
4. 글 수정 기능
5. 글 삭제 기능


---------------------------추가? 제거?-----------------------------
-	회원가입
	1. 회원가입을 작성하고 제출하면, 회원 정보가 데이터베이스에 저장이 되는가?
	회원가입 제출(@mock)
	데이터베이스에 저장되고 조회되는지 확인

-	로그인
	1. 로그인을 했을 때, 입력한 정보와 데이터베이스에 있는 회원정보와 일치하는지 확인하는가?
	그리고 로그인을 승인하는가?
	일치하는 로그인 했다고 가정(@mock)
	데이터베이스와 일치하는지 확인
	
	데이터베이스와 일치하는 로그인을 했다 가정(@mock)
	로그인시 페이지를 이동하는가 확인
	
	로그아웃
	1. 로그아웃을 하면 세션을 끊고 로그인 화면으로 돌아가는가?
	로그아웃을 했다 가정(@mock)
	세션이 끊어지는지 확인
	로그인 화면으로 돌아가는지 확인
----------------------------------------------------------------------

테스트 항목
1. 사용자가 글 작성 양식을 작성하고 제출하면 서버가 데이터베이스에 저장을 하는가?
제출 -> 저장 확인
즉, 데이터를 보내서(@mock)
, db에 저장이 되는가를 확인.

2. 사용자가 글 목록 보기 페이지에 접속하면, 서버가 데이터베이스에서 글 목록을 조회하는가?
이를 화면에 출력하는가?
접속을 가정하고(@mock)
데이터베이스에서 조회를 하고, 페이지에 출력되는지 확인.

3. 사용자가 특정 글을 선택했을 때, 서버가 데이터베이스에서 글을 조회하고,
상세 보기 페이지에 출력하는가?

특정 글을 선택함을 가정하고(@mock)
데이터베이스에서 글을 조회하고 상세보기 페이지에 출력하는지 확인.

4. 사용자가 글을 수정하고 제출했을 때, 데이터베이스에 업데이트되는가?

글을 수정하고 제출했음을 가정하고(@mock)
데이터베이스에서 업데이트되는가 확인.

5. 사용자가 글을 삭제했을때, 데이터베이스에서 삭제가 되는가?
글 삭제를 했음을 가정하고(@mock)
데이터베이스에서 삭제되는가 확인.

즉, 들어가거나 가정하는 값은 모두 spring에서 처리해야 하고,
실제로의 테스트는 sql database에서 적절한 값이 받아지는가로 테스트를 구성할 필요가 있다.





